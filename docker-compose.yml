version: "3.8"

services:
  cocoma-website:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
        REACT_APP_ENV: production
        REACT_APP_API_URL: https://api.cocomadigital.com
        REACT_APP_DEBUG: "false"
        REACT_APP_LOG_LEVEL: error

    container_name: cocoma-digital-website

    ports:
      - "8080:8080"

    environment:
      - NODE_ENV=production
      - REACT_APP_ENV=production
      - REACT_APP_API_URL=https://api.cocomadigital.com
      - REACT_APP_DEBUG=false
      - REACT_APP_LOG_LEVEL=error
      - PORT=8080

    restart: always

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

    # Optional: Add resource limits
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1G
        reservations:
          cpus: "1"
          memory: 512M

    # Optional: Add logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
# Optional: Add reverse proxy (Nginx)
# nginx:
#   image: nginx:alpine
#   container_name: cocoma-nginx
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - ./nginx.conf:/etc/nginx/nginx.conf:ro
#   depends_on:
#     - cocoma-website
#   restart: always

# Optional: Add PostgreSQL database (if needed)
# postgres:
#   image: postgres:15-alpine
#   container_name: cocoma-postgres
#   environment:
#     POSTGRES_DB: cocoma_db
#     POSTGRES_USER: cocoma_user
#     POSTGRES_PASSWORD: your_secure_password
#   volumes:
#     - postgres_data:/var/lib/postgresql/data
#   restart: always

# volumes:
#   postgres_data:
